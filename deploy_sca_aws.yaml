- name: create sca stack
  hosts: sca-dev
  gather_facts: false
  serial: 1
  vars:
    sca: "{{ hostvars[inventory_hostname]['sca'] }}"
    vault: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/vault.yml"
  tasks:
    - name: create sca stack
      cloudformation:
        stack_name: "{{sca.name}}"
        state: "present"
        region: "{{awsRegion}}"
        disable_rollback: true
        #template: "f5-sca-securitystack/aws-quickstart-scca-main-same-net.json"
        template_url: "{{sca.aws.cf.template.url}}"
        capabilities: ["CAPABILITY_AUTO_EXPAND","CAPABILITY_IAM"]
        template_parameters:
          licenseKey1: "{{sca.license.bigip1}}"
          licenseKey2: "{{sca.license.bigip2}}"
          licenseKey3: "{{sca.license.bigip3}}"
          licenseKey4: "{{sca.license.bigip4}}"
          pBaselineCompliance: "{{sca.compliance}}"
          pProject: "quickstart-f5-scca-security"
          pQuickstartS3BucketName: "{{sca.aws.s3.bucket.name}}"
          pQuickstartS3KeyPrefix: "{{sca.aws.s3.bucket.folder}}"
          pVdssVpcCidr: "{{sca.cidr}}"
          sshKey: "{{sca.aws.ec2.sshkeyname}}"
          instanceTypeTier1: "{{sca.aws.ec2.tier1Size}}"
          instanceTypeTier2: "{{sca.aws.ec2.tier2Size}}"
        tags:
          Stack: "ansible-sca-cloudformation"
      delegate_to: localhost